{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qwerty\\\\PycharmProjects\\\\MERN\\\\restaurant-reviews\\\\frontend\\\\src\\\\components\\\\restaurants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RestaurantDataService from \"../services/restaurant\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Restaurant = props => {\n  _s();\n\n  const initialRestaurantState = {\n    id: null,\n    name: \"\",\n    address: {},\n    cuisine: \"\",\n    reviews: []\n  };\n  const [restaurant, setRestaurant] = useState(initialRestaurantState);\n\n  const getRestaurant = id => {\n    RestaurantDataService.get(id).then(response => {\n      setRestaurant(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getRestaurant(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const deleteReview = (reviewId, index) => {\n    RestaurantDataService.deleteReview(reviewId, props.user.id).then(response => {\n      setRestaurant(prevState => {\n        prevState.reviews.splice(index, 1);\n        return { ...prevState\n        };\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: restaurant ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: restaurant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cuisine: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), restaurant.cuisine, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), restaurant.address.building, \" \", restaurant.address.street, \",\", \" \", restaurant.address.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/restaurants/\" + props.match.params.id + \"/review\",\n        className: \"btn btn-primary\",\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Reviews \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: restaurant.reviews.length > 0 ? restaurant.reviews.map((review, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-4 pb-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [review.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"User: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 27\n                  }, this), review.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Date: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 27\n                  }, this), review.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this), props.user && props.user.id === review.user_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: () => deleteReview(review._id, index),\n                    className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: {\n                      pathname: \"/restaurants/\" + props.match.params.id + \"/review\",\n                      state: {\n                        currentReview: review\n                      }\n                    },\n                    className: \"btn btn-primary col-lg-5 mx-1 mb-1\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No reviews yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No restaurant selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Restaurant, \"K66YcpirxX+Ex2PTJMb4G+rTODg=\");\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["C:/Users/qwerty/PycharmProjects/MERN/restaurant-reviews/frontend/src/components/restaurants.js"],"names":["React","useState","useEffect","RestaurantDataService","Link","Restaurant","props","initialRestaurantState","id","name","address","cuisine","reviews","restaurant","setRestaurant","getRestaurant","get","then","response","data","console","log","catch","e","match","params","deleteReview","reviewId","index","user","prevState","splice","building","street","zipcode","length","map","review","text","date","user_id","_id","pathname","state","currentReview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Restaurant = (props) => {\r\n  const initialRestaurantState = {\r\n    id: null,\r\n    name: \"\",\r\n    address: {},\r\n    cuisine: \"\",\r\n    reviews: [],\r\n  };\r\n  const [restaurant, setRestaurant] = useState(initialRestaurantState);\r\n\r\n  const getRestaurant = (id) => {\r\n    RestaurantDataService.get(id)\r\n      .then((response) => {\r\n        setRestaurant(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRestaurant(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const deleteReview = (reviewId, index) => {\r\n    RestaurantDataService.deleteReview(reviewId, props.user.id)\r\n      .then((response) => {\r\n        setRestaurant((prevState) => {\r\n          prevState.reviews.splice(index, 1);\r\n          return {\r\n            ...prevState,\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {restaurant ? (\r\n        <div>\r\n          <h5>{restaurant.name}</h5>\r\n          <p>\r\n            <strong>Cuisine: </strong>\r\n            {restaurant.cuisine}\r\n            <br />\r\n            <strong>Address: </strong>\r\n            {restaurant.address.building} {restaurant.address.street},{\" \"}\r\n            {restaurant.address.zipcode}\r\n          </p>\r\n          <Link\r\n            to={\"/restaurants/\" + props.match.params.id + \"/review\"}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Add Review\r\n          </Link>\r\n          <h4> Reviews </h4>\r\n          <div className=\"row\">\r\n            {restaurant.reviews.length > 0 ? (\r\n              restaurant.reviews.map((review, index) => {\r\n                return (\r\n                  <div className=\"col-lg-4 pb-1\" key={index}>\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <p className=\"card-text\">\r\n                          {review.text}\r\n                          <br />\r\n                          <strong>User: </strong>\r\n                          {review.name}\r\n                          <br />\r\n                          <strong>Date: </strong>\r\n                          {review.date}\r\n                        </p>\r\n                        {props.user && props.user.id === review.user_id && (\r\n                          <div className=\"row\">\r\n                            <a\r\n                              onClick={() => deleteReview(review._id, index)}\r\n                              className=\"btn btn-primary col-lg-5 mx-1 mb-1\"\r\n                            >\r\n                              Delete\r\n                            </a>\r\n                            <Link\r\n                              to={{\r\n                                pathname:\r\n                                  \"/restaurants/\" +\r\n                                  props.match.params.id +\r\n                                  \"/review\",\r\n                                state: {\r\n                                  currentReview: review,\r\n                                },\r\n                              }}\r\n                              className=\"btn btn-primary col-lg-5 mx-1 mb-1\"\r\n                            >\r\n                              Edit\r\n                            </Link>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : (\r\n              <div className=\"col-sm-4\">\r\n                <p>No reviews yet.</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>No restaurant selected.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurant;\r\n"]},"metadata":{},"sourceType":"module"}